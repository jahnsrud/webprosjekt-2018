{"laborator_custom_css":"\/* ===========================================================\r\nCustom modification only for CONSTRUCTION Demo - START\r\n=========================================================== *\/\r\n\r\n\/* Paragraphs Line Height *\/\r\np {\r\n    line-height: 1.7;\r\n}\r\n\r\n\/* Partners: Scale logos by 50% *\/\r\n.logos-holder.logos-scaled .c-logo img {\r\n\tmax-width: 50%;    \r\n}\r\n\r\n\/* Menu: Margin Left *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container div.menu>ul>li+li, \r\n.main-header.menu-type-standard-menu .standard-menu-container ul.menu>li+li {\r\n    margin-left: 15px;\r\n}\r\n\r\n\/* Menu: Hide Underline *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container.menu-skin-dark div.menu>ul>li>a:after, \r\n.main-header.menu-type-standard-menu .standard-menu-container.menu-skin-dark ul.menu>li>a:after {\r\n    display: none;\r\n} \r\n\r\n\/* Menu: Item Spacing *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container.menu-skin-dark div.menu>ul>li>a span, \r\n.main-header.menu-type-standard-menu .standard-menu-container.menu-skin-dark ul.menu>li>a span {\r\n    padding: 6px 10px;\r\n}\r\n\r\n\/* Menu: Hover Style *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container.menu-skin-dark div.menu>ul>li>a:hover span, \r\n.main-header.menu-type-standard-menu .standard-menu-container.menu-skin-dark ul.menu>li>a:hover span {\r\n    background: #f7c016;\r\n    -webkit-border-radius: 2px;\r\n\t-moz-border-radius: 2px;\r\n\tborder-radius: 2px;\r\n}\r\n\r\n\/* Special menu button hover color *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container div.menu>ul>li.special-menu-button>a:hover span, .main-header.menu-type-standard-menu .standard-menu-container ul.menu>li.special-menu-button>a:hover span {\r\n    background: #00b19e;\r\n    color: #fff;\r\n}\r\n\r\n\/* Menu: Removing the menu Hover Style from Submenus  *\/\r\n.sub-menu a span {\r\n    background: transparent !important;\r\n}\r\n\r\n\/* Menu: Active menu style *\/\r\nli.current-menu-item a span {\r\n    background: #f7c016;\r\n\t-webkit-border-radius: 2px;\r\n\t-moz-border-radius: 2px;\r\n\tborder-radius: 2px;\r\n}\r\n\r\n\/* Sub-Menu: Borders Radius *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container ul.menu ul {\r\n\t-webkit-border-radius: 2px;\r\n\t-moz-border-radius: 2px;\r\n\tborder-radius: 2px;\r\n}\r\n\r\n\/* Footer: Footer Bottom Bakcground Color *\/\r\n.footer-bottom {\r\n\tbackground: #444;\r\n}\r\n\r\n\/* Footer: Footer Bottom Color *\/\r\n.site-footer .footer-bottom-content .copyrights p {\r\n\tcolor: #FFF !important;\r\n}\r\n\r\n\/* Footer: Footer Background Color*\/\r\nfooter.site-footer {\r\n\tbackground-color: #555 !important;\r\n}\r\n\r\n\/* Footer: Remove Horizontal line separator *\/\r\n.site-footer hr {\r\n\tdisplay: none;\r\n}\r\n\r\n\/* Footer: Social Networks Background *\/\r\n.site-footer .social-networks.rounded li a {\r\n\tbackground: #555;\r\n}\r\n\r\n\/* Footer: Social Networks Color *\/\r\n.site-footer .social-networks.rounded li a i {\r\n\tcolor: #EEE !important;\r\n}\r\n\r\n\/* Footer: Bottom Footer Spacing *\/\r\n.footer-bottom {\r\n    background: transparent;\r\n    padding-bottom: 25px;\r\n}\r\n\r\n\/* Footer: Bottom Footer Layout *\/\r\n.footer-bottom .container {\r\n    background: #444;\r\n\t-webkit-border-radius: 3px;\r\n\t-moz-border-radius: 3px;\r\n\tborder-radius: 3px;\r\n    padding: 0 20px;\r\n}\r\n\r\n\/* Footer: Bottom Footer Spacing *\/\r\n.site-footer.footer-bottom-horizontal .footer-bottom-content {\r\n    padding: 15px 0px;\r\n}\r\n\r\n\/* Footer: Bottom Social Networks Size and Spacing *\/\r\n.site-footer .social-networks.rounded li a {\r\n    width: 30px;\r\n    height: 30px;\r\n    margin-bottom: 0px;\r\n}\r\n\r\n\/* Footer: Line Height *\/\r\n.site-footer .footer-widgets .widget .textwidget, \r\n.site-footer .footer-widgets .widget p {\r\n    line-height: 1.5;\r\n}\r\n\r\n\/* Footer: List *\/\r\n.site-footer .footer-widgets .widget li {\r\n    padding: 4px 0;\r\n}\r\n\r\n\/* Footer: Widgets Positioning *\/\r\n.widget_nav_menu {\r\n    margin-top: 20px;\r\n}\r\n\r\n\/* Footer: First Widget Width *\/\r\n.widget-area.widgets--columned-layout.widgets--columns-5>.widget:first-child {\r\n    width: 40%;\r\n}\r\n\r\n\/* Footer: Remove Margin Bottom *\/\r\n.site-footer .footer-widgets {\r\n    margin-bottom: 0px;\r\n}\r\n\r\n\/* Footer: Font color *\/\r\n.site-footer.site-footer-inverted .footer-widgets .widget a, \r\n.site-footer.site-footer-inverted .footer-widgets .widget div, \r\n.site-footer.site-footer-inverted .footer-widgets .widget p {\r\n    color: #CCC;\r\n}\r\n\r\n\/* Footer: Font color of the headings *\/\r\n.site-footer.site-footer-inverted .footer-widgets .widget h1, \r\n.site-footer.site-footer-inverted .footer-widgets .widget h2, \r\n.site-footer.site-footer-inverted .footer-widgets .widget h3 {\r\n    color: #FFF !important;\r\n}\r\n\r\n\/* Color of the search widget *\/\r\n.widget.widget_product_search .search-bar input[name=\"s\"], .widget.widget_search .search-bar input[name=\"s\"] {\r\n    background: #f7f7f7;\r\n}\r\n\r\n\/* Services Retina Image placement*\/\r\n.services-image img {\r\n    max-width: 75px;\r\n}\r\n\r\n\/* Revolution Slider: Removed margin on the bottom of the slider *\/\r\n.wpb_revslider_element {\r\n    margin-bottom: 0px;\r\n}\r\n\r\n\/* Revolution Slider button *\/\r\n.rev-btn {\r\n    line-height: 1.3 !important;\r\n}\r\n\r\n\/* Accordion: Active Heading background color *\/\r\n.accordion-construction-demo-style .vc_active .vc_tta-panel-heading {\r\n    background-color: #f7c016;\r\n}\r\n\r\n\/* Accordion: Active Heading font color *\/\r\n.accordion-construction-demo-style .vc_active .vc_tta-panel-heading h4 a {\r\n    color: #fff !important;\r\n}\r\n\r\n\/* Tour: Active tab background and font color *\/\r\n.tour-construction-demo-style .vc_tta-tab.vc_active>a {\r\n    background-color: #f7c016 !important;\r\n    color: #fff !important;\r\n}\r\n\r\n\/*Tour Tab modifications on mobile*\/\r\n@media screen and (max-width: 768px) {\r\n\t\/* Tour: Active tab background and font color (Mobile) *\/\r\n\t.tour-construction-demo-style .vc_tta-panel.vc_active .vc_tta-panel-title>a {\r\n\t    background-color: #f7c016 !important;\r\n\t    color: #fff !important;\r\n\t}\r\n\t\r\n\t\/* Tour: Active tab remove link underline on mobile *\/\r\n\t.tour-construction-demo-style .vc_tta-panel-title>a:after {\r\n\t    background-color: transparent !important;\r\n\t}\r\n\t\r\n\t\/* Margin bottom on the tabs *\/\r\n\t.vc_tta-panel-heading {\r\n\t\tmargin-bottom: 10px !important;\r\n\t}\r\n\t\r\n\t.wpb-js-composer .vc_tta.vc_general .vc_tta-panel-body {\r\n        padding-left: 0px !important;\r\n        padding-right: 0px !important;\r\n\t}\r\n}\r\n\r\n\/* Contact Form: Input Colors *\/\r\n.contact-form .form-group {\r\n\tbackground: #eee;\r\n\tpadding: 5px 15px;\r\n}\r\n\r\n\/* Contact Form: Remove Borders*\/\r\n.labeled-input-row label,\r\n.labeled-input-row input, \r\n.labeled-textarea-row label {\r\n\tborder-bottom: none;\r\n}\r\n\r\n\/* Contact Form: Textarea Remove Border *\/\r\n.labeled-textarea-row textarea {\r\n\tbackground: none;\r\n}\r\n\r\n\/* Contact Form: Padding *\/\r\n.wpb_wrapper .lab-contact-form {\r\n\tpadding-top: 30px;\r\n}\r\n\r\n\/* Contact Form: Autofill background color for webkit browsers *\/\r\nhtml input:-webkit-autofill {\r\n    -webkit-box-shadow: 0 0 0 1000px #eee inset;\r\n    -moz-box-shadow: 0 0 0 1000px #eee inset;\r\n    box-shadow: 0 0 0 1000px #eee inset;\r\n}\r\n\r\n\/* Contact: Map Margin Top *\/\r\n.contact-map-column {\r\n\tmargin-top: -100px;\r\n}\r\n\r\n.dash {\r\n    background: #ddd;\r\n}\r\n\r\n\/* Blog Post: Author Info area *\/\r\n.single-post .post .author-info {\r\n    padding: 30px;\r\n    border-left: 2px solid #f7bf16;\r\n    border-top: 2px solid #f7bf16;\r\n}\r\n\r\n\/* Blog: Widget Borders *\/\r\n.widget-area--skin-background-fill>.widget {\r\n    border-left: 2px solid #f7bf16;\r\n    border-top: 2px solid #f7bf16;\r\n    background: transparent;\r\n}\r\n\r\n\/* Blog: Search Form Background Color *\/\r\n.widget.widget_product_search .search-bar input[name=\"s\"], \r\n.widget.widget_search .search-bar input[name=\"s\"] {\r\n  background: #FFF;\r\n}\r\n\r\n\/* Single Portfolio: Container Top Margin *\/\r\n.single-portfolio .page-container {\r\n    margin-top: 0px;\r\n}\r\n\r\n\/* Projects: Transparent Background *\/\r\n.single-portfolio-holder.alt-one .services {\r\n    background: transparent;\r\n}\r\n\r\n\/* Projects: Services Spacing and Border *\/\r\n.portfolio-template-default .single-portfolio-holder .details .services .checklist-entry {\r\n    margin-top: 25px;\r\n    border-bottom: 1px solid #EEE;\r\n}\r\n\r\n\/* Projects: Services Spacing *\/\r\n.portfolio-template-default .single-portfolio-holder .details .services .checklist-entry:last-child {\r\n    border-bottom: none;\r\n}\r\n\r\n\/* Comments: Textarea *\/\r\np.labeled-textarea-row.comment-form-comment,\r\n.single-post .comment-form>p {\r\n    background: #EEE;\r\n    padding: 5px 15px;\r\n}\r\n\r\n.comment-form-comment {\r\n    margin-top: 20px;\r\n}\r\n\r\n\/* Comments: Textarea *\/\r\n.single-post .comment-form>p.logged-in-as {\r\n    background: transparent;\r\n    margin: 0px;\r\n    padding: 0px;\r\n}\r\n\r\n\/* Comments: Submit Comment *\/\r\n.single-post .comment-form>p.form-submit {\r\n    padding: 0px;\r\n    background: transparent;\r\n    margin-top: 0px;\r\n}\r\n\r\n\/* Comments: Spacing Between Forms *\/\r\n.single-post .comment-form>p.labeled-input-row {\r\n    border-right: 18px solid #FFF;\r\n}\r\n\r\n\/* Comments: Spacing Between Forms *\/\r\n.single-post .comment-form>p.comment-form-url {\r\n    border-right: none;\r\n}\r\n\r\n\/* Forms: Label Color *\/\r\n.labeled-input-row label, .labeled-textarea-row label {\r\n    color: #333 !important;\r\n}\r\n\r\n.post-navigation a i, \r\n.post-navigation a strong {\r\n    color: #333;\r\n}\r\n\r\n\/* Single Post: Comment form *\/\r\n.single-post .comment-form {\r\n    margin: 0px;\r\n}\r\n\r\n\/* Forms: Textarea *\/\r\n.labeled-textarea-row textarea {\r\n    line-height: 1.5;\r\n    color: #222;\r\n}\r\n\r\n\/* Single Post Author details *\/\r\n.single-post .post .author-info--details .author-name em {\r\n    display: inline-block;\r\n}\r\n\r\n.banner-text h4 {\r\n    text-transform: inherit;\r\n}\r\n\r\n\/* Projects: Filter Centering and Spacing *\/\r\n.product-filter {\r\n    text-align: center;\r\n    margin-top: 40px;\r\n}\r\n\r\n\/* Homepage (Blog Posts element) \u2014 Post Title *\/  \r\n.wpb_wrapper .lab-blog-posts .blog-post-entry {\r\n\tborder: none;\r\n}\r\n\r\n\/* Homepage (Blog Posts element) \u2014 Post Title *\/  \r\n.wpb_wrapper .lab-blog-posts .blog-post-entry .blog-post-content-container {\r\n\tpadding-left: 0px;\r\n\tpadding-right: 0px;\r\n}\r\n\r\n\/* Homepage (Blog Posts element) \u2014 Hide Excerpt *\/  \r\n\/*\r\n.wpb_wrapper .blog-news-hide-excerpt .blog-post-entry .blog-post-excerpt {\r\n\tdisplay: none;\r\n}\r\n*\/ \r\n\r\n\/* Homepage (Blog Posts element) \u2014 Remove Margin Bottom *\/  \r\n.wpb_wrapper .lab-blog-posts .blog-post-entry .blog-post-title {\r\n   margin-bottom: 0px;\r\n}\r\n\r\n\/* Homepage (Blog Posts element) \u2014 Border Bottom *\/  \r\n.wpb_wrapper .lab-blog-posts .blog-post-entry .blog-post-content-container .blog-post-title a {\r\n    border-bottom: 2px solid #EEE;\r\n}\r\n\r\n\/* Homepage (Blog Posts element) \u2014 Remove Margin Bottom *\/  \r\n.wpb_wrapper .lab-blog-posts .blog-post-column {\r\n    margin-bottom: 0px;\r\n}\r\n\r\n\/* Homepage (Titles) \u2014 Center Align *\/  \r\n.center-title {\r\n    text-align: center;\r\n}\r\n\r\n\/* Homepage (Information Row) *\/  \r\n.information-row {\r\n    padding: 35px 0;\r\n}\r\n\r\n\/* Homepage (Titles) \u2014 Remove Margin Top *\/  \r\n.wpb_wrapper .section-title>h2 {\r\n  margin-top: 0px;\r\n}\r\n\r\n\/* Homepage (Titles) \u2014 Remove Margin Bottom *\/  \r\n.wpb_wrapper .section-title>p {\r\n  margin-bottom: 0px;\r\n}\r\n\r\n\/* Single Portfolio: Portfolio navigation *\/  \r\n.no-bottom-margin {\r\n    margin-bottom: 40px !important;\r\n}\r\n\r\n\/* Projects: Center Filter *\/\r\n.portfolio-title-holder>.pt-column {\r\n\tmargin: 0 auto;\r\n}\r\n\r\n\r\n\/* Services: Text Padding *\/\r\n.service-column {\r\n    padding: 100px 50px;\r\n}\r\n\r\n\/* Services: Remove Margin Bottom *\/\r\n.service-column .wpb_content_element {\r\n    margin-bottom: 0px !important;\r\n}\r\n\/* ===========================================================\r\nCustom modification only for CONSTRUCTION Demo - END\r\n=========================================================== *\/\r\n\r\n\/* ===========================================================\r\nUser CSS modifications\r\n=========================================================== *\/\r\n\r\n.example {\r\n\tcolor: red;\r\n}","laborator_custom_css_lg":"\/* Homepage: Service Padding *\/\r\n.service-column {\r\n    padding: 100px 50px;\r\n}\r\n\r\n.service-column .wpb_content_element {\r\n    margin-bottom: 0px !important;\r\n}","laborator_custom_css_md":"","laborator_custom_css_sm":"","laborator_custom_css_xs":".logos-holder.logos-scaled .client-logos-col {\r\n    width: 50% !important;\r\n}\r\n\r\n.footer-bottom {\r\n    padding-bottom: 0px;\r\n}\r\n\r\n.see-more-button a {\r\n    width: 100%;\r\n}\r\n\r\n.information-row {\r\n    padding: 0px;\r\n}\r\n\r\n.contact-map-column {\r\n    margin-top: auto;\r\n}\r\n\r\n.title-banner .wpb_content_element {\r\n    margin-bottom: 0px !important;\r\n}\r\n\r\n.title-banner .vc_column-inner {\r\n    padding-top: 0px !important;\r\n}\r\n\r\n.section-title {\r\n    margin-bottom: 0px;\r\n}\r\n\r\n.lab-contact-form .button {\r\n    width: 100%;\r\n}\r\n\r\n.contact-form .form-group {\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.wpb-js-composer .vc_tta.vc_general .vc_tta-panel-title {\r\n    line-height: 1.5 !important; \r\n}\r\n\r\n\/* Homepage: Service Padding *\/\r\n.service-column {\r\n    padding: 30px 0px;\r\n}","laborator_custom_css_less":"@my-var: #ccc;\n@my-other-var: #fff;\n\n.any-container {\n\t.nested-container {\n\t\tcolor: @my-var;\n\t}\n}","laborator_custom_css_sass":"$color: #abc;\n\ndiv.example-el {\n\tcolor: lighten($color, 20%);\n}"}