{"laborator_custom_css":"\/* ===========================================================\r\nCustom modification only for SHOP Demo - START\r\n=========================================================== *\/\r\n\r\n\/* Homepage: Free Shipping Text Align *\/\r\n.free-shipping {\r\n\ttext-align: center;\t\r\n}\r\n\r\n\/* Footer: Link Color *\/\r\nfooter.main-footer a {\r\n\tcolor: #bbb !important;\t\r\n}\r\n\r\n\/* Footer Inverted: Background Color *\/\r\nfooter.main-footer-inverted {\r\n\tbackground-color: #333 !important;\t\r\n}\r\n\r\n\/* Footer: Border Color *\/\r\n.main-footer.main-footer-inverted hr {\r\n\tborder-color: rgba(255,255,255,.1);\r\n}\r\n\r\n\/* Footer: Removed Margin Bottom for Widgets *\/\r\n.footer-widgets .widget.widget_nav_menu {\r\n    margin-bottom: 0px;\r\n}\r\n\r\n\/* Footer: Decreased Padding for Widgets *\/\r\n.footer-widgets .widget ul li {\r\n    padding: 2px 0px;\r\n}\r\n\r\n\/* Separator Line *\/\r\n.vc_separator.vc_sep_color_grey .vc_sep_line {\r\n\tborder-color: #333;\t\r\n}\r\n\r\n\/* Sidbar Right: Added an extra padding on the left *\/\r\n.blog-sidebar.shop-sidebar.shop-sidebar-right {\r\n    padding-left: 20px;\r\n}\r\n\r\n\/* Blog: Textarea Lines *\/\r\n.comment-form textarea {\r\n    background-image: linear-gradient(#DDD 1px, transparent 1px);\r\n}\r\n\r\n\/* Blog: Textarea Lines *\/\r\n.labeled-input-row input {\r\n\tborder-bottom-color: #DDD;\t\r\n}\r\n\r\n\/* ===========================================================\r\nCustom modification only for SHOP Demo - END\r\n=========================================================== *\/\r\n\r\n\/* ===========================================================\r\nUser CSS modifications\r\n=========================================================== *\/\r\n.example {\r\n \tcolor: red;\r\n}","laborator_custom_css_lg":"","laborator_custom_css_md":"","laborator_custom_css_sm":"","laborator_custom_css_xs":"","laborator_custom_css_less":"@my-var: #ccc;\r\n@my-other-var: #fff;\r\n\r\n.any-container {\r\n\t.nested-container {\r\n\t\tcolor: @my-var;\r\n\t}\r\n}\r\n\r\n\r\n.tp-button {\r\n\t\r\n\t&.shopnow {\r\n\t\tborder-radius: none !important;\r\n\t\ttext-shadow: 0px !important;\r\n\t\tbackground: #F9544C;\r\n\t\tfont-family: \"Dosis\";\r\n\t\tfont-size: 15px;\r\n\t\ttext-transform: uppercase;\r\n\t\tborder-radius: 0px !important;\r\n\t\ttext-shadow: none !important;\r\n\t\tpadding: 17px 25px;\r\n\t}\r\n}","laborator_custom_css_sass":"$color: #abc;\n\ndiv.example-el {\n\tcolor: lighten($color, 20%);\n}"}