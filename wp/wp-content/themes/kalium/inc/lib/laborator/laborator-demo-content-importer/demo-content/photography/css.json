{"laborator_custom_css":"\/* ===========================================================\r\nCustom modification only for PHOTOGRAPHY Demo - START\r\n=========================================================== *\/\r\n\/* Home: Auto Type Element *\/\r\n.home .auto-type-element {\r\n\tline-height: 26px\r\n}\r\n\r\n\/* Menu Trigger Icon - Narrow the lines *\/\r\n.menu-bar .ham:after {\r\n\ttop: 6px !important;\t\r\n}\r\n\r\n.menu-bar .ham:before {\r\n\ttop: -6px !important;\r\n}\r\n\r\n.menu-bar.exit .ham:before {\r\n\ttop: -10px !important;\r\n}\r\n\r\n\/* About: Menu Trigger White *\/\r\n.page-id-2167 .menu-bar.menu-skin-dark .ham:after, \r\n.page-id-2167 .menu-bar.menu-skin-dark .ham:before,\r\n.page-id-2167 .menu-bar.menu-skin-dark .ham {\r\n\tbackground-color: #fff;\r\n}\r\n\r\n\/* Contact: Menu Trigger White *\/\r\n.page-id-2261 .menu-bar.menu-skin-dark .ham:after, \r\n.page-id-2261 .menu-bar.menu-skin-dark .ham:before,\r\n.page-id-2261 .menu-bar.menu-skin-dark .ham {\r\n\tbackground-color: #fff;\r\n}\r\n\r\n\/* Blog: Description Line height  *\/\r\n.page-heading--description {\r\n\tline-height: 1.5;\r\n}\r\n\r\n\/* Blog: White hover  *\/\r\n.blog-posts .post-item .post-thumbnail .post-hover {\r\n\tbackground: rgba(255,255,255,0.85) !important;\t\r\n}\r\n\r\n\/* Blog: Hide Icon on Hover *\/\r\n.blog-posts .post-item .post-thumbnail .post-hover .hover-icon {\r\n\tdisplay: none;\r\n}\r\n\r\n\/* Blog: Hide Borders *\/\r\n.blog-posts .post-item.template-standard .post-details, .blog-posts .post-item.template-standard .post-thumbnail {\r\n\tborder: none;\r\n}\r\n\r\n\/* Blog: Center Titles *\/\r\n.blog-posts .post-item .post-details .post-title {\r\n\ttext-align: center !important;\r\n\tline-height: normal;\r\n\tmargin-bottom: 0px;\r\n}\r\n\r\n\/* Blog: Remove Post Title Underline *\/\r\n.blog-posts .post-item .post-details .post-title a:after  {\r\n\tdisplay: none;\r\n}\r\n\r\n\/* Blog: Hide Category Icon *\/\r\n.blog-posts .post-item .post-details .post-meta i {\r\n\tdisplay: none !important;\t\r\n}\r\n\r\n\/* Blog: Center date *\/\r\n.blog-posts .post-item .post-details .post-meta.date {\r\n\ttext-align: center;\r\n\tfloat: none !important;\r\n\tmargin-top: 5px;\t\r\n}\r\n\r\n\/* Blog Post: Style date *\/\r\n.blog-posts .post-item .post-details .post-meta.category, \r\n.blog-posts .post-item .post-details .post-meta.date {\r\n\tfloat: none !important;\t\r\n\tletter-spacing: 5px;\r\n\tcolor: #999;\r\n}\r\n\r\n\/* Blog Post: Comments label line adjust *\/\r\nbody.single-post .message-form .form-group .placeholder {\r\n    padding-bottom: 0px !important;\r\n}\r\n\r\n\/* Blog Post: Comment Connector *\/\r\n.single-blog-holder .comments-holder .comment-holder .commenter-image .comment-connector {\r\n\tborder-color: #fff;\r\n}\r\n\r\n\/* Blog Post: Date Styling *\/\r\n.single-post .post .post-meta.date {\r\n\tdisplay: inline-block;\r\n    width: auto;\r\n    float: none !important;\r\n    letter-spacing: 5px;\r\n    padding: 0px;\r\n    color: #999;\r\n}\r\n\r\n\/* Blog Post: Remove Margin Bottom *\/\r\n.single-post .post .entry-header {\r\n\tmargin-bottom: 15px;\r\n}\r\n\r\n\/* Blog Post: Add Margin Bottom to Image *\/\r\n.single-post .post-image {\r\n\tmargin-bottom: 45px;\r\n}\r\n\r\n\/* Blog Post: Hide Date *\/\r\n.single-post .post .post-meta.date i {\r\n\tdisplay: none;\t\r\n}\r\n\r\n\/* Pages: Center Title  *\/\r\n.blog .page-heading--title-section, .home .section-title  {\r\n\ttext-align: center !important;\r\n}\r\n\r\n\/* Portfolio: Category Hover Color*\/\r\n.portfolio-holder .thumb .hover-state .info p a:hover {\r\n\tcolor: #a58f60;\t\r\n}\r\n\r\n\/* About: Center Social Networks *\/\r\nbody.page-id-2167 .social-networks .list-inline {\r\n    text-align: center;\r\n}\r\n\r\n\/* Portolio: Center Categories *\/\r\n.portfolio-title-holder .pt-column {\r\n    margin: auto;\r\n}\r\n\r\n.product-filter .portfolio-subcategory {\t\r\n    left: 50%;\r\n\tright: auto;\r\n    transform: translateX(-50%);\r\n}\r\n\r\n\/* Contact: Dashed Bottom Border *\/\r\nbody.page-id-2261 .lab-autotype-text-entry {\r\n\tbox-shadow: 0px 2px 0px #222\r\n}\r\n\r\n@media screen and (max-width: 992px) {\r\n\t.product-filter {\r\n    \ttext-align: center;\r\n\t}\r\n}\r\n\/* ===========================================================\r\nCustom modification only for PHOTOGRAPHY Demo - END\r\n=========================================================== *\/\r\n\r\n\/* ===========================================================\r\nUser CSS modifications\r\n=========================================================== *\/\r\n.example {\r\n \tcolor: red !important;\r\n}","laborator_custom_css_lg":"\/* Padding on single blog comments *\/\r\n.post-comments .container,\r\n.single-post .post--column {\r\n\tpadding: 0 70px;\r\n}\r\n\r\n.single-post .post-comments+.post-comment-form .comment-respond,\r\n.single-post .comment-respond {\r\n\tpadding: 30px 55px;\t\r\n}\r\n\r\n.single-post .post--full-width-image.format-quote blockquote {\r\n\tpadding-left: 70px;\r\n\tpadding-right: 70px;\r\n}","laborator_custom_css_md":".blog .section-title h1, .home .section-title h1 {\r\n    margin-top: 20px;\r\n}","laborator_custom_css_sm":".blog .section-title h1, .home .section-title h1 {\r\n    margin-top: 100px;\r\n}","laborator_custom_css_xs":".blog .section-title h1, .home .section-title h1 {\r\n    margin-top: 100px;\r\n}","laborator_custom_css_less":"@my-var: #ccc;\r\n@my-other-var: #fff;\r\n\r\n.any-container {\r\n\t.nested-container {\r\n\t\tcolor: @my-var;\r\n\t}\r\n}","laborator_custom_css_sass":"$color: #abc;\n\ndiv.example-el {\n\tcolor: lighten($color, 20%);\n}"}