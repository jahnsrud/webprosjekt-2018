{"laborator_custom_css":"\/* ===========================================================\r\nCustom modification only for FASHION Demo - START\r\n=========================================================== *\/\r\n\/* Link Color on Focus *\/\r\na:focus, \r\na:hover {\r\n\tcolor: #666;\t\r\n}\r\n\r\n\/* Revolution Slider: Remove Border on  Videos *\/\r\n.rev_slider embed, \r\n.rev_slider iframe, \r\n.rev_slider object, \r\n.rev_slider video {\r\n    border: none !important;\r\n}\r\n\r\n\/* Slider Remove Margin Bottom  *\/\r\n.wpb_revslider_element {\r\n  margin-bottom: 0px !important;\r\n}\r\n\r\n\/* Menu: Menu Lines Shorter *\/\r\n.menu-bar .ham:after, \r\n.menu-bar .ham:before {\r\n\tleft: auto;\r\n\tright: 0px;\r\n}\r\n\t\r\n\/* Menu: Menu Lines Shorter *\/\r\n.menu-bar  .ham:after {\r\n\twidth: 10px;\r\n}\r\n\r\n\/* Menu: Menu Lines Close *\/\r\n.menu-bar.exit .ham:after {\r\n\twidth: 23px;\t\r\n}\r\n\r\n\/* Menu: Menu Lines Shorter *\/\r\n.menu-bar .ham {\r\n\twidth: 18px; \r\n}\r\n\r\n\/* Menu: Sub Menu Margin Left *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container div.menu>ul ul ul, \r\n.main-header.menu-type-standard-menu .standard-menu-container ul.menu ul ul {\r\n\tmargin-left: 20px;\t\r\n}\r\n\r\n\/* Menu:  Menu Caret Color *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container div.menu > ul ul li.menu-item-has-children:before, \r\n.main-header.menu-type-standard-menu .standard-menu-container ul.menu ul li.menu-item-has-children:before {\r\n    border-color: transparent transparent transparent #222;\r\n}\r\n\r\n\/* Menu: Submenu Redesign *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container ul.menu ul {\r\n    background: #FFF !important;\r\n    border: 1px solid #222;\r\n}\r\n\r\n\/* Menu: Submenu Link Color *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container.menu-skin-main ul.menu ul li a, \r\n.main-header.menu-type-standard-menu .standard-menu-container.menu-skin-main div.menu > ul ul li a {\r\n    color: #222;\r\n}\r\n\r\n\/* Menu: Submenu Hover Line Color *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container.menu-skin-main ul.menu ul li a:after, \r\n.main-header.menu-type-standard-menu .standard-menu-container.menu-skin-main div.menu > ul ul li a:after {\r\n    background-color: #222;\r\n}\r\n\r\n\/* Links: Hover Line Start from Centre *\/\r\n.main-footer a:after, \r\n.wrapper a:after {\r\n\tposition: absolute;\r\n    margin: 0 auto;\r\n    left: 0;\r\n    right: 0;\r\n    -webkit-transition: all .3s cubic-bezier(0, 0, 0.16, 0.95);\r\n    -moz-transition: all .3s cubic-bezier(0, 0, 0.16, 0.95);\r\n    -o-transition: all .3s cubic-bezier(0, 0, 0.16, 0.95);\r\n    transition: all .3s ease(0, 0, 0.16, 0.95);\r\n}\r\n\r\n\/* Body: Large Screens *\/\r\n@media (min-width: 1400px) {\r\n\t.container {\r\n\t\twidth: 1370px;\r\n\t    max-width: 1370px;\t\r\n\t}\r\n\t\r\n\t.vc-container .vc-parent-row.row-stretch_row>.vc_row,\r\n\t.vc-container .vc-parent-row.row-default {\r\n\t\twidth: 1370px;\r\n\t    max-width: 1370px;\t\r\n\t}\t\r\n}\r\n\r\n\/* Body: Large Screens *\/\r\n@media (min-width: 1600px) {\r\n\t.container {\r\n\t\twidth: 1570px;\r\n\t    max-width: 1570px;\t\r\n\t}\r\n\t\r\n\t.vc-container .vc-parent-row.row-stretch_row>.vc_row,\r\n\t.vc-container .vc-parent-row.row-default {\r\n\t\twidth: 1570px;\r\n\t    max-width: 1570px;\t\r\n\t}\r\n}\r\n\r\n\/* Header: Remove Padding of Container*\/\r\n.main-header.fullwidth-header .container {\r\n\tpadding: 0px;\t\r\n}\r\n\r\n\/* Header: Mini Cart Styling *\/\r\n.menu-cart-icon-container .lab-wc-mini-cart-contents {\r\n\tborder-color: #222;\r\n\tbox-shadow: none;\r\n}\r\n\r\n\/* Shop: Remove WooCommerce Top Padding *\/\r\n.woocommerce.page-container {\r\n\tmargin-top: 0px;\t\r\n}\r\n\r\n\/* Shop: Sale Button Inside Image *\/\r\n.single-product.woocommerce .product .onsale {\r\n    right: 40px;\r\n}\r\n\r\n\/* Shop: Single Font Size and Line Height *\/\r\n.woocommerce .summary p {\r\n    line-height: 28px;\r\n}\r\n\r\n\/* Shop: Single Product Padding *\/\r\n.woocommerce.single-product .single-product--product-details>.product>.summary {\r\n    padding-left: 65px;\r\n    padding-right: 40px;\r\n\tpadding-top: 90px;\r\n}\r\n\r\n\r\n\/* Shop: Single Product Added to cart message *\/\r\nbody.single-product .woocommerce .woocommerce-message {\r\n    width: 50%;\r\n    float: right;\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n\tbody.single-product .woocommerce .woocommerce-message {\r\n\t\twidth: 100%;\r\n\t\tfloat: none;\r\n\t}\t\t\r\n}\r\n\r\n\/* Shop: Single Attributes *\/\r\n.woocommerce .single-product .summary .product_meta>span {\r\n    display: block;\r\n    border-top: 1px solid #EEE;\r\n    padding: 15px 0 11px 0;\r\n}\r\n\r\n\/* Shop: Single Remove Border from Attributes *\/\r\n.woocommerce .single-product .summary .product_meta>span:first-child {\r\n\tborder-top: none;\t\r\n}\r\n\r\n\/* Shop: Single Remove Top Spacing *\/\r\n.woocommerce .single-product .kalium-woocommerce-product-gallery .main-product-images.plain .woocommerce-product-gallery__image~.woocommerce-product-gallery__image {\r\n\tmargin-top: 0px;\r\n}\r\n\r\n\/* Shop: Single Remove Border from Prices *\/\r\n.woocommerce .product .summary .price ins, \r\n.woocommerce .product .summary .price>.amount {\r\n\tborder-bottom: 0px;\t\r\n}\r\n\r\n\/* Shop: Sale tag *\/\r\n.woocommerce .single-product .summary .single_variation_wrap .single_variation>.price del, \r\n.woocommerce .single-product .summary div[itemprop=offers]>.price del {\r\n\ttop: 0px;\r\n}\r\n\r\n\/* Shop: Tabs *\/\r\n.woocommerce .woocommerce-tabs .entry-content {\r\n\tpadding: 0px;\r\n\tbackground: transparent;\r\n}\r\n\r\n\/* Shop: Tabs Remove Background *\/\r\n.woocommerce .woocommerce-tabs .tabs li {\r\n\tbackground: transparent;\t\r\n}\r\n\r\n\/* Shop: Tabs Font Size *\/\r\n.woocommerce .woocommerce-tabs .tabs li a {\r\n    padding: 10px 20px 10px 0px;\r\n}\r\n\r\n\/* Shop: Tabs - Hide Title *\/\r\n.woocommerce .woocommerce-tabs .entry-content h2 {\r\n\tdisplay: none;\t\r\n}\r\n\r\n\/* Shop: Tabs - Remove Border Bottom *\/\r\n.woocommerce .woocommerce-tabs .tabs li.active {\r\n\tborder-bottom: none;\t\r\n}\r\n\r\n\/* Shop: Variations  *\/\r\n.woocommerce .single-product .summary .variations tbody tr {\r\n    width: 50%;\r\n    float: left;\r\n}\r\n\r\n\/* Shop: Variations Remove Padding  *\/\r\n.woocommerce .single-product .summary .variations tr+tr {\r\n    padding-top: 0px;\r\n}\r\n\r\n\/* Shop: Variations Select Width  *\/\r\n.woocommerce .single-product .summary .variations .form-control {\r\n\twidth: 180px;\r\n}\r\n\r\n\/* Shop: Variations Select Width  *\/\r\n.woocommerce .select-option-ui span {\r\n\tcolor: #222;\r\n\tmin-width: inherit;\r\n}\r\n\r\n\/* Shop: Variations Select Width  *\/\r\n.woocommerce .single-product .summary .variations .form-control {\r\n  width: 205px;\r\n}\r\n\r\n\/* Shop: Add to Cart Button *\/\r\n.woocommerce .summary .group_table .button, \r\n.woocommerce .summary form.cart .button {\r\n    background: #000;\r\n    width: 75%;\r\n    margin-left: 5%;\r\n    border-radius: 0px;\r\n    border: 1px solid #222;\r\n    color: #222;\r\n    background: transparent;\r\n}\r\n\r\n\/* Shop: Form Color *\/\r\n.woocommerce .summary .group_table .button:hover, \r\n.woocommerce .summary form.cart .button:hover { \r\n    color: #FFF;\r\n}\r\n\r\n\/* Shop: Hide Reviews After Title *\/\r\n.woocommerce .summary .woocommerce-product-rating {\r\n\tdisplay: none;\r\n}\r\n\r\n\/* Shop: Quantity Button Width *\/\r\n.woocommerce div.quantity {\r\n    width: 20%; \r\n}\r\n\r\n\/* Shop: Quantity Button Color *\/\r\n.woocommerce div.quantity input.qty {\r\n    border-radius: 0px;\r\n    border: 1px solid #222;\r\n    color: #222;\r\n    background: transparent;\r\n\tmin-width: 60px;\r\n}\r\n\r\n\/* Shop: Reviews - Remove Padding*\/\r\n.woocommerce .woocommerce-tabs .entry-content #reviews #review_form_wrapper {\r\n\tpadding: 0px;\r\n\tmargin: 0px;\r\n}\r\n\r\n\/* Shop: Reviews - Centering Tabs *\/\r\n.woocommerce .woocommerce-tabs .entry-content .shop_attributes {\r\n\tmargin: 0 auto;\t\r\n}\r\n\r\n\/* Shop: Reviews - Centering Tabs *\/\r\n.woocommerce .woocommerce-tabs .tabs {\r\n\ttext-align: center;\t\r\n}\r\n\r\n\/* Shop: Reviews - Centering Tabs *\/\r\n.woocommerce .woocommerce-tabs .tabs li {\r\n\tfloat: none;\r\n\tdisplay: inline-block;\r\n}\r\n\r\n\/* Shop: Reviews - Remove Padding from Reviews *\/\r\n.woocommerce .woocommerce-tabs .tabs li a {\r\n  padding: 0px;\r\n}\r\n\r\n\/* Shop: Reviews - Padding *\/\r\n.woocommerce .woocommerce-tabs .tabs li {\r\n  padding: 0 15px;\r\n}\r\n\r\n\/* Shop: Reviews Border *\/\r\n.woocommerce .woocommerce-tabs .tabs li.active a {\r\n  border-bottom: 1px solid #222;\r\n}\r\n\r\n\/* Shop: Reviews Margin Bottom *\/\r\n.woocommerce .woocommerce-tabs .tabs {\r\n  margin-bottom: 30px\r\n}\r\n\r\n\/* Shop: Reviews Width *\/\r\n.woocommerce .woocommerce-tabs .entry-content {\r\n  width: 700px;\r\n  margin: 0 auto;\r\n}\r\n\r\n\/* Shop: Reviews Rating Style Circle *\/\r\n.woocommerce .star-rating .star-rating-icons .circle {\r\n  width: 5px;\r\n  height: 5px;\r\n  margin-left: 5px;\r\n}\r\n\r\n\/* Shop: Remove Margin from Product Images *\/\r\n.woocommerce .single-product .images .product-images-carousel.plain a+a {\r\n\tmargin-top: 0px;\r\n}\r\n\r\n\/* Shop: Dropdown *\/\r\n.woocommerce .woocommerce-ordering-container .dropdown.open .dropdown-toggle {\r\n    border: 1px solid #000;\r\n}\r\n\r\n\/* Shop: Dropdown *\/\r\n.woocommerce .woocommerce-ordering-container .dropdown .dropdown-toggle {\r\n    border: 1px solid transparent;\r\n}\r\n\r\n\/* Shop: Dropdown *\/\r\n.dropdown .dropdown-menu {\r\n\tborder: 1px solid #000;\r\n\tborder-top: none;\r\n}\r\n\r\n\/* Shop: Sale Replacement *\/\r\n.woocommerce .product .onsale {\r\n\ttransform: none;\r\n\tpadding: 0px 5px;\r\n\theight: auto;\r\n\twidth: auto;\r\n\tcolor: #333;\r\n\tborder-radius: 0px;\r\n\tline-height: 30px;\r\n\ttop: 20px;\r\n\tright: 25px;\r\n\tborder: 1px solid #333;\r\n\tmargin: 0px;\r\n\tposition: absolute;\r\n\tdisplay: inline-block;\r\n\tbackground: #FFF;\r\n\tbox-shadow: 5px 5px 0px rgba(1,1,1,0.05);\r\n\ttext-transform: uppercase;\r\n}\r\n\r\n\/* Shop: Out of Stock Replacement *\/\r\n.woocommerce .product .onsale.oos {\r\n    background: #FFF;\r\n    line-height: inherit;\r\n    padding: 0px 5px;\r\n}\r\n\r\n\/* Shop: Featured Replacement *\/\r\n.woocommerce .product .onsale.featured {\r\n\tbackground: #FFF;\r\n}\r\n\r\n\/* Shop: Clear for Add to cart and Drodowns *\/\r\n.single_variation_wrap {\r\n\tclear: both;\t\r\n}\r\n\r\n\/* Shop: Size Guide *\/\r\n.sg {\r\n  \tbackground: transparent !important;\r\n  \tcolor: #FFF;\r\n}\r\n\r\n\/* Shop: Size Guide *\/\r\ndiv.sg table, div.sg table th {\r\n  \tcolor: #FFF;\r\n}\r\n\r\n\/* Shop: Size Guide Table Borders *\/\r\ndiv.sg table tr:first-child th,\r\ndiv.sg table tr td, \r\ndiv.sg table tr th {\r\n\tborder-bottom-color: #444444;\r\n\tborder-right-color: #444444;\r\n}\r\n\r\n\/* Shop: Size Guide Table Remove Padding *\/\r\n#ct_size_guide {\r\n\tpadding: 0px;\t\r\n}\r\n\r\n\/* Shop: Size Guide Table Remove Horizontal Lines *\/\r\n#ct_size_guide hr {\r\n\tdisplay: none !important;\t\r\n}\r\n\r\n\/* Shop: Category Title Count *\/\r\nmark.count {\r\n  display: none;\r\n}\r\n\r\n\/* Shop: Category Title *\/\r\n.woocommerce .shop-categories .product-category-col>.product-category .woocommerce-loop-category__title, \r\n.woocommerce .shop-categories .product-category-col>.product-category h3{\r\n\tbackground: transparent;\r\n\tpadding: 0px;\r\n\ttransform: none;\r\n\tleft: 30px;\r\n\ttop: auto;\r\n\tbottom: 30px;\r\n\tcolor: #FFF;\r\n\tletter-spacing: 5px;\r\n}\r\n\r\n\/* Shop: Category Title *\/\r\n.woocommerce .shop-categories .product-category-col>.product-category a:hover .woocommerce-loop-category__title, .woocommerce .shop-categories .product-category-col>.product-category a:hover h3{\r\n\tcolor: #FFF;\r\n}\r\n\r\n\/* Shop: Category Hover *\/\r\n.woocommerce .shop-categories .product-category-col>.product-category a:hover:before {\r\n\tbackground-color: transparent;\r\n}\r\n\r\n\/* Shop: Title Margin  *\/\r\n.woocommerce .woocommerce-header {\r\n\tmargin: 50px 0;\t\r\n}\r\n\r\n\/* Shop: Single Image Remove Top Spacing *\/\r\n.woocommerce .single-product .kalium-woocommerce-product-gallery .main-product-images.plain .woocommerce-product-gallery__image~.woocommerce-product-gallery__image {\r\n\tmargin-top: 0px;\t\r\n}\r\n\r\n\/* Footer: Remove Bottom Margin *\/\r\n.main-footer .footer-widgets {\r\n\tmargin-bottom: 25px;\r\n}\r\n\r\n\/* Footer: Social Networks *\/\r\n.main-footer .footer-widgets .widget .social-networks.rounded li a {\r\n\twidth: 30px;\r\n\theight: 30px;\r\n\tpadding: 0px;\r\n\tmargin: 0 5px;\r\n}\r\n\r\n\/* Footer: Social Networks Background *\/\r\n.main-footer .footer-widgets .social-networks.rounded a {\r\n    background-color: #222;\r\n}\r\n\r\n\/* Footer: Social Networks Color *\/\r\n.main-footer .footer-widgets .widget .social-networks.rounded li a i {\r\n\tcolor: #FFF;\r\n}\r\n\r\n\/* Footer Background and Border *\/\r\nfooter.main-footer {\r\n    background-color: #FFF !important;\r\n    border-top: 2px solid #222;\r\n}\r\n\r\n\r\n\/* Checkout -  Removed background color from the Paypal form *\/\r\n.woocommerce .bordered-block .payment_methods .payment_box {\r\n    background: transparent;\r\n}\r\n\r\n\/* Checkout -  Border Color *\/\r\n.woocommerce .bordered-block {\r\n\tborder-color: #222;\r\n}\r\n\r\n\/* Checkout -  Border Color for Table *\/\r\n.woocommerce .shop_table .cart-subtotal {\r\n    border-bottom-color: #222;\r\n} \r\n\r\n\/* Checkout - Border Color *\/\r\n.woocommerce .shop_table>tbody>tr,\r\n.woocommerce .bordered-block h2, \r\n.woocommerce .shop_table>tfoot>tr {\r\n\tborder-bottom-color: #222 !important;\r\n}\r\n\r\n\/* Checkout - Input Border Color *\/\r\n.form-control {\r\n\tborder-color: #222;\r\n}\r\n\r\n\/* Checkout - Input Focus Border Color *\/\r\n.form-control:focus {\r\n\tborder-color: #999;\r\n}  \r\n\r\n\/* Checkout - Select Border Color *\/\r\n.woocommerce .select2-container.select2-container--default .select2-selection--single{\r\n\/*\tborder-color: #222; *\/\r\n}\r\n\r\n\/* Checkout - Select Border Color *\/\r\n.woocommerce-page .select2-dropdown {\r\n\tborder-color: #222;\r\n}\r\n\r\n.woocommerce-page .select2-dropdown .select2-search__field {\r\n\tborder-color: #222;\r\n}\r\n\r\n\/* Checkout - Bank Transfer Border *\/\r\n.woocommerce .bordered-block .payment_methods .payment_box {\r\n\tborder-color: #222;\r\n}\r\n\r\n\/* Cart - Coupon Holder Border *\/\r\n.woocommerce .checkout_coupon .coupon-holder {\r\n\tborder-color: #222;\t\r\n}\r\n\r\n\/* Product: Make View Cart  Clickable *\/\r\nbody.single-product .woocommerce .woocommerce-message {\r\n\tz-index: 2;\r\n}\r\n\r\n\/* Cart -  Border Color *\/\r\n.woocommerce .cart-collaterals .cart_totals table th, \r\n.woocommerce .cart-collaterals .cart_totals table tr {\r\n    border-bottom-color: #222;    \r\n}\r\n\r\n\/* About: About Text *\/\r\n.wpb_wrapper .section-title.about-us-title  h2 {\r\n\tposition: absolute;\r\n\ttop: -110px;\r\n\tcolor: #FFF;\r\n\tmargin: 0px;\t\r\n\tmargin-left: 50px;\r\n}\r\n\r\n\/* About: About Title *\/\r\n.wpb_wrapper .section-title.about-us-title {\r\n\tmargin: 0px;\r\n}\r\n\r\n\/* About: Font Size and Padding *\/\r\n.about-us {\r\n\tpadding: 0px 50px;\t\r\n\tmargin-bottom: 35px;\r\n}\r\n\r\n\/* About: Working Hours *\/\r\n.working-hours {\r\n\tline-height: 40px;\r\n}\r\n\r\n\/* Contact: Remove Label Border *\/\r\n.comment-form .labeled-textarea-row label,\r\n.comment-form .labeled-input-row label,\r\n.contact-form .form-group label {\r\n\tborder-bottom-color: #222;\r\n}\r\n\r\n\/* Blog - Caption on center *\/\r\nbody.single-post .wp-caption-text {\r\n    text-align: center;\r\n}\r\n\r\n\/* Blog - Horizontal line *\/\r\nbody.single-post hr {\r\n    border-color: #e0e0e0;\r\n    border-style: dashed;\r\n}\r\n\r\n\/* Blog: Single Post Title Margin *\/\r\n.single-post .post .entry-header {\r\n\tmargin-bottom: 20px;\r\n}\r\n\r\n\/* Blog: Single Post Colorize Date and Categories *\/\r\n.single-post .post .post-meta a,\r\n.single-post .post .post-meta {\r\n\tcolor: #666;\r\n}\r\n\r\n\/* Blog: Remove Underline on Titles *\/\r\n.blog-posts .post-item .post-details .post-title a:after {\r\n\tdisplay: none;\r\n}\r\n\r\n\/* Blog: Sidebar *\/\r\n.column--sidebar .blog-archive--widgets {\r\n    border: 2px solid #222;\r\n    padding: 30px 40px !important;\r\n    margin-top: 0px;\r\n}\r\n\r\n\/* Blog: Sidebar Remove Top Margin *\/\r\n.column--sidebar .blog-archive--widgets {\r\n\tmargin-top: inherit;\t\r\n}\r\n\r\n\/* Blog: Sidebar Link Color *\/\r\n.column--sidebar .blog-archive--widgets .widget ul li {\r\n    padding: 3px 0;\r\n}\r\n\r\n\/* Blog: Sidebar Link Color *\/\r\n.column--sidebar .blog-archive--widgets .widget ul li a {\r\n    color: #777;\r\n}\r\n\r\n\/* Blog: Post Info *\/\r\n.blog-posts .post-item.template-standard .post-details {\r\n\tpadding: 35px 10px;\r\n}\r\n\r\n\/* Blog: Sidebar *\/\r\n.portfolio-holder .portfolio-item.with-padding {\r\n\tpadding: 0px 15px;\t\r\n}\r\n\r\n\/* Blog: Hide Categories *\/\r\n.blog-posts .post-item .post-details .post-meta.category {\r\n\tdisplay: none;\r\n}\r\n\r\n\/* Blog: Hide Icons *\/\r\n.blog-posts .post-item .post-details .post-meta i.icon {\r\n\tdisplay: none;\r\n}\r\n\r\n\/* Blog: Date Text Decoration *\/\r\n.blog-posts .post-item .post-details .post-meta {\r\n\tfloat: none;\r\n\ttext-transform: uppercase;\r\n\ttext-align: center;\r\n\tletter-spacing: 2px;\r\n}\r\n\r\n\/* Blog: Sidebar *\/\r\n.blog-sidebar {\r\n    border: 2px solid #222;\r\n    padding: 30px 40px !important;\r\n    margin-top: 0px;\r\n}\r\n\r\n\/* Blog: Center Posts *\/\r\n.blog-posts .post-item.template-standard .post-details {\r\n\ttext-align: center;\r\n}\r\n\r\n\/* Blog Widgets: Remove Borders *\/\r\n.wpb_wrapper .lab-blog-posts .blog-post-entry,\r\n.blog-posts .post-item.template-standard .post-details, \r\n.blog-posts .post-item.template-standard .post-thumbnail {\r\n\tborder: none;\t\r\n}\r\n\r\n\/* Blog Widgets: Post Date *\/\r\n.wpb_wrapper .lab-blog-posts .blog-post-entry .blog-post-content-container .blog-post-date {\r\n    text-transform: uppercase;\r\n    letter-spacing: 3px;\r\n}\r\n\r\n\/* Blog Widgets: Hide Description *\/\r\n.blog-post-excerpt {\r\n  display: none;\r\n}\r\n\r\n\/* Blog Widgets: Remove Padding *\/\r\n.wpb_wrapper .lab-blog-posts .blog-post-entry .blog-post-content-container {\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n}\r\n\r\n\/* Page: Center Title *\/\r\n.centered-title {\r\n\ttext-align: center;\t\r\n}\r\n\r\n\/* Page: White Title *\/\r\n.white-title h2 {\r\n\tcolor: #FFF;\t\r\n}\r\n\r\n\/* Page Title Margin *\/\r\n.wpb_wrapper .section-title {\r\n\tmargin: 50px 0;\t\r\n}\r\n\r\n\/* Page Title *\/\r\n.wp-page-title {\r\n\tmargin: 50px 0;\t\r\n}\r\n\r\n\/* Page Title: Remove Margin from Heading *\/\r\n.section-title h1, \r\n.section-title h2, \r\n.section-title h3 {\r\n\tmargin: 0px;\t\r\n}\r\n\r\n\/* Forms: Border Bottom Color *\/\r\n.comment-form input, \r\n.comment-form textarea, \r\n.contact-form input, \r\n.contact-form textarea {\r\n    border-bottom-color: #222;\r\n}\r\n\r\n\/* Forms: Textarea Line Color *\/\r\n.contact-form textarea,\r\n.comment-form textarea {\r\n    background-image: linear-gradient(#222 1px, transparent 1px);\r\n}\r\n\r\n\/* Cart: Remove from Cart Visible  *\/\r\n.woocommerce .shop_table .cart_item .product-remove a {\r\n    visibility: visible;\r\n    opacity: 1;\r\n}\r\n\r\n\/* Cart: Table Border Color *\/\r\n.woocommerce .shop_table tr {\r\n    border-bottom-color: #222;\r\n}\r\n\r\n\/* Visual Composer List Color *\/\r\n.wpb_wrapper .wpb_text_column ol li, \r\n.wpb_wrapper .wpb_text_column ul li {\r\n\tcolor: inherit;\r\n}\r\n\r\n\/* Newsletter: Input Color *\/\r\n.email-container .field-wrap > div input{\r\n    background: transparent;\r\n    border: none;\r\n    border-bottom: 2px solid rgba(255,255,255,0.1);\r\n    margin-top: 40px;\r\n    padding: 10px 0px;\r\n    color: #FFF;\r\n}\r\n\r\n\/* Login: Border Input Color *\/\r\n.woocommerce .bordered-block .login .absolute input, \r\n.woocommerce .bordered-block .register .absolute input, \r\n.woocommerce .bordered-block.with-form-labels .absolute input {\r\n\tborder-bottom-color: #222;\r\n}\r\n\r\n\/* Mobile View CSS *\/\r\n@media screen and (max-width: 768px) {\r\n\t\/* Shop: Sale Button Inside Image *\/\r\n\t.single-product.woocommerce .product .onsale {\r\n\t\tright: 30px;\r\n\t}\r\n\t\r\n\t\/* Shop - Description Remove Top Padding *\/\r\n\t.woocommerce .woocommerce-tabs {\r\n\t\tpadding-top: 0px;\t\r\n\t}\r\n\t\r\n\t\/* Shop - Reviews *\/\r\n\t.woocommerce .woocommerce-tabs .entry-content {\r\n\t\twidth: auto;\r\n\t}\r\n\t\r\n\t\/* Shop - Reviews *\/\r\n\t.woocommerce .woocommerce-tabs .entry-content #reviews #review_form_wrapper .form-submit {\r\n\t    width: 100%;\r\n\t    margin: 0px;\r\n\t    padding: 0px 15px;\r\n\t}\r\n\t\r\n\t\/* Shop - Reviews Remove Background *\/\r\n\t.woocommerce .woocommerce-tabs .tabs li {\r\n\t\tbackground: transparent;\r\n\t\tpadding: 0px;\r\n\t\ttext-align: left;\r\n\t}\r\n\t\r\n\t\/* Shop - Reviews Remove Border *\/\r\n\t.woocommerce .woocommerce-tabs .tabs li a {\r\n\t\tbackground: transparent;\r\n\t\tpadding: 5px 0px;\r\n\t\ttransition: none;\r\n\t}\r\n\t\r\n\t.woocommerce .woocommerce-tabs .tabs li.active {\r\n\t\tbackground: transparent !important;\t\r\n\t}\r\n\t\r\n\t.woocommerce .single-product .summary {\r\n\t\tpadding: 10px 0px;\r\n\t\tmargin: 0px;\r\n\t}\r\n\t\r\n\t.woocommerce .summary .group_table .button, \r\n\t.woocommerce .summary form.cart .button {\r\n\t\twidth: 100%; \t\r\n\t\tmargin-left: 0px;\r\n\t}\r\n\t\r\n\t\/* About Us: Remove Padding *\/\r\n\t.about-us {\r\n\t\tpadding: 0px;\t\r\n\t}\r\n\t\r\n\t\/* About Us: Title *\/\r\n\t.wpb_wrapper .section-title.about-us-title h2 {\r\n\t    position: relative;\r\n\t    top: 0px;\r\n\t    color: #222;\r\n\t    margin: 0px;\r\n\t    margin-left: 0px;\r\n\t    margin-bottom: 20px;\t\r\n\t}\r\n\t\r\n\t\/* Login and Register: Padding *\/\r\n\t.woocommerce .col2-set .col-1 {\r\n\t\tpadding-right: 15px;\t\r\n\t}\r\n\t\r\n\t\/* Login and Register: Padding *\/\r\n\t.woocommerce .col2-set .col-2 {\r\n\t\tpadding-left: 15px;\t\r\n\t}\r\n}\r\n\r\n.single_add_to_cart_button:hover {\r\n    color: #222 !important;\r\n}\r\n\r\n\r\n.woocommerce.single-product .summary p.price {\r\n    margin: 40px 0;\r\n    color: #000;\r\n} \r\n\r\n\/* ===========================================================\r\nCustom modification only for FASHION Demo - END\r\n=========================================================== *\/\r\n\r\n\/* ===========================================================\r\nUser CSS modifications\r\n=========================================================== *\/\r\n.example {\r\n \tcolor: red !important;\r\n}","laborator_custom_css_lg":"","laborator_custom_css_md":"","laborator_custom_css_sm":"","laborator_custom_css_xs":"","laborator_custom_css_less":"@my-var: #ccc;\n@my-other-var: #fff;\n\n.any-container {\n\t.nested-container {\n\t\tcolor: @my-var;\n\t}\n}","laborator_custom_css_sass":"$color: #abc;\n\ndiv.example-el {\n\tcolor: lighten($color, 20%);\n}"}